(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{439:function(a,t,r){"use strict";r.r(t);var s=r(21),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"第二章-术语"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第二章-术语"}},[a._v("#")]),a._v(" 第二章-术语")]),a._v(" "),r("h2",{attrs:{id:"cpu"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cpu"}},[a._v("#")]),a._v(" CPU")]),a._v(" "),r("p",[a._v("当代的CPU由一个或多个内核组成——一个具有自己指令流的独立执行单元。带有CPU的内核可以组织成一个或多个插槽。")]),a._v(" "),r("h2",{attrs:{id:"node"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[a._v("#")]),a._v(" NODE")]),a._v(" "),r("p",[a._v("一个独立的“计算机盒子”，通常由多个 CPUs/processors/cores、内存、网络结构等。多个节点通过网络连接到一块组成一台超级计算机。")]),a._v(" "),r("h2",{attrs:{id:"task"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#task"}},[a._v("#")]),a._v(" TASK")]),a._v(" "),r("p",[a._v("计算工作中逻辑上离散的单元。task 通常是由处理器执行的程序或者类似程序的指令集。并行程序由多个处理器上运行的多个任务组成。")]),a._v(" "),r("h2",{attrs:{id:"pipeline"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pipeline"}},[a._v("#")]),a._v(" PIPELINE")]),a._v(" "),r("ul",[r("li",[a._v("将一个任务分成一系列的步骤由不同的处理单元处理，很像集成流水线")]),a._v(" "),r("li",[a._v("一种并行计算方法")])]),a._v(" "),r("h2",{attrs:{id:"shared-memory"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#shared-memory"}},[a._v("#")]),a._v(" SHARED MEMORY")]),a._v(" "),r("ul",[r("li",[a._v("计算机体系结构角度看待，是所有处理器都可以直接访存的公告物理内存")]),a._v(" "),r("li",[a._v("编程角度看待，并行任务都拥有的相同的 “picture”，并且可以直接寻址访存的逻辑内存，而不管物理内存的实际位置")])]),a._v(" "),r("h2",{attrs:{id:"symmetric-multi-processor-smp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#symmetric-multi-processor-smp"}},[a._v("#")]),a._v(" SYMMETRIC MULTI-PROCESSOR (SMP)")]),a._v(" "),r("p",[a._v("共享内存硬件体系结构，其中多处理器共享一个地址空间，并对所有资源（内存、磁盘等）具有同等访问权。")]),a._v(" "),r("h2",{attrs:{id:"distributed-memory"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#distributed-memory"}},[a._v("#")]),a._v(" DISTRIBUTED MEMORY")]),a._v(" "),r("ul",[r("li",[a._v("硬件中指的是基于网络的物理内存访存")]),a._v(" "),r("li",[a._v("编程模型中，任务只能在逻辑上“查看”本地机器内存，并且必须使用通信来访存其他机器上的内存")])]),a._v(" "),r("h2",{attrs:{id:"communications"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#communications"}},[a._v("#")]),a._v(" COMMUNICATIONS")]),a._v(" "),r("p",[a._v("并行任务通常需要交换数据。有几种实现方法：")]),a._v(" "),r("ul",[r("li",[a._v("shared memory")]),a._v(" "),r("li",[a._v("network")])]),a._v(" "),r("p",[a._v("这就是通信。")]),a._v(" "),r("h2",{attrs:{id:"synchronization"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#synchronization"}},[a._v("#")]),a._v(" SYNCHRONIZATION")]),a._v(" "),r("p",[a._v("实时协调并行任务，通常与通信有关。 "),r("br"),a._v("\n同步通常涉及至少一个任务的等待，因此会导致并行程序的执行时间增加。")]),a._v(" "),r("h2",{attrs:{id:"computational-granularity"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#computational-granularity"}},[a._v("#")]),a._v(" COMPUTATIONAL GRANULARITY")]),a._v(" "),r("p",[a._v("在并行计算中，粒度是计算与通信比例的定量或定性度量：")]),a._v(" "),r("ul",[r("li",[a._v("粗粒度（Coarse）：在通信之间完成相对大量的计算工作")]),a._v(" "),r("li",[a._v("细粒度（Fine）：在通信之间完成相对较少的计算工作")])]),a._v(" "),r("h2",{attrs:{id:"observed-speedup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#observed-speedup"}},[a._v("#")]),a._v(" OBSERVED SPEEDUP")]),a._v(" "),r("p",[a._v("加速比定义为:")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v(" wall-clock time of serial execution\n---------------------------------------\n wall-clock time of parallel execution\n")])])]),r("p",[a._v("加速比（speedup）是衡量并行程序性能最简单、最常用的指标之一。")]),a._v(" "),r("h2",{attrs:{id:"parallel-overhead"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#parallel-overhead"}},[a._v("#")]),a._v(" PARALLEL OVERHEAD")]),a._v(" "),r("p",[a._v("并行任务所特有的执行时间，不是其他工作的时间。并行开销的因素由：")]),a._v(" "),r("ul",[r("li",[a._v("任务启动时间")]),a._v(" "),r("li",[a._v("同步")]),a._v(" "),r("li",[a._v("数据通信")]),a._v(" "),r("li",[a._v("并行语言、库、操作系统等造成的软件开销")]),a._v(" "),r("li",[a._v("任务终止时间")])]),a._v(" "),r("h2",{attrs:{id:"massively-parallel"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#massively-parallel"}},[a._v("#")]),a._v(" MASSIVELY PARALLEL")]),a._v(" "),r("p",[a._v("包含许多处理单元的并行硬件系统。“many”的含义在不断的增加，目前最大的并行计算机由数十万到数百万的处理单元组成。")]),a._v(" "),r("h2",{attrs:{id:"embarrassingly-idealy-parallel"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#embarrassingly-idealy-parallel"}},[a._v("#")]),a._v(" EMBARRASSINGLY (IDEALY) PARALLEL")]),a._v(" "),r("p",[a._v("指的是同时解决许多相似但独立的任务，任务之间只需要少量的或者不需要协调。")]),a._v(" "),r("h2",{attrs:{id:"scalability"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#scalability"}},[a._v("#")]),a._v(" SCALABILITY")]),a._v(" "),r("p",[a._v("指并行系统（硬件和/或软件）通过增加更多的资源来提升加速比的能力。促进 scalability 的因素包括：")]),a._v(" "),r("ul",[r("li",[a._v("硬件，特别是内存与cpu的带宽和通信网络")]),a._v(" "),r("li",[a._v("应用算法")]),a._v(" "),r("li",[a._v("并行开销相关")]),a._v(" "),r("li",[a._v("自己程序的特性")])]),a._v(" "),r("h2",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),r("p",[r("a",{attrs:{href:"https://hpc.llnl.gov/training/tutorials/introduction-parallel-computing-tutorial",target:"_blank",rel:"noopener noreferrer"}},[a._v("Introduction parallel computing tutorial"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);